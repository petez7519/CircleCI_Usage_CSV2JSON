version: 2.1

orbs:
  # Using the jq orb for JSON processing
  jq: circleci/jq@3.0

jobs:
  fetch-usage-data:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      
      - jq/install
      
      - run:
          name: Calculate Previous Month Dates
          command: |
            # Calculate first and last day of previous month
            FIRST_DAY=$(date -d "$(date +%Y-%m-01) -1 month" +%Y-%m-%d)
            LAST_DAY=$(date -d "$(date +%Y-%m-01) -1 day" +%Y-%m-%d)
            
            echo "export START_DATE=$FIRST_DAY" >> $BASH_ENV
            echo "export END_DATE=$LAST_DAY" >> $BASH_ENV
            
            echo "Fetching usage data from $FIRST_DAY to $LAST_DAY"
      
      - run:
          name: Initiate Usage Export Job
          command: |
            source $BASH_ENV
            
            # Start the export job
            RESPONSE=$(curl -X POST \
              "https://circleci.com/api/v2/organizations/${CIRCLE_ORGANIZATION_ID}/usage_export_job" \
              -H "Circle-Token: ${CIRCLE_TOKEN}" \
              -H "Content-Type: application/json" \
              -d "{
                \"start\": \"${START_DATE}\",
                \"end\": \"${END_DATE}\",
                \"shared_org_ids\": []
              }")
            
            echo "$RESPONSE"
            
            # Extract job ID
            JOB_ID=$(echo "$RESPONSE" | jq -r '.usage_export_job_id')
            
            if [ "$JOB_ID" = "null" ] || [ -z "$JOB_ID" ]; then
              echo "Error: Failed to create usage export job"
              echo "$RESPONSE"
              exit 1
            fi
            
            echo "export JOB_ID=$JOB_ID" >> $BASH_ENV
            echo "Created usage export job: $JOB_ID"
      
      - run:
          name: Wait for Export Job Completion
          command: |
            source $BASH_ENV
            
            MAX_ATTEMPTS=60  # 5 minutes max wait time
            ATTEMPT=0
            
            while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
              STATUS_RESPONSE=$(curl -s \
                "https://circleci.com/api/v2/organizations/${CIRCLE_ORGANIZATION_ID}/usage_export_job/${JOB_ID}" \
                -H "Circle-Token: ${CIRCLE_TOKEN}")
              
              STATE=$(echo "$STATUS_RESPONSE" | jq -r '.state')
              
              echo "Job status: $STATE (attempt $((ATTEMPT + 1))/$MAX_ATTEMPTS)"
              
              if [ "$STATE" = "finished" ]; then
                DOWNLOAD_URL=$(echo "$STATUS_RESPONSE" | jq -r '.download_urls[0]')
                echo "export DOWNLOAD_URL=$DOWNLOAD_URL" >> $BASH_ENV
                echo "Export job completed successfully!"
                exit 0
              elif [ "$STATE" = "error" ] || [ "$STATE" = "expired" ]; then
                echo "Error: Export job failed with state: $STATE"
                echo "$STATUS_RESPONSE"
                exit 1
              fi
              
              sleep 5
              ATTEMPT=$((ATTEMPT + 1))
            done
            
            echo "Error: Export job timed out after $MAX_ATTEMPTS attempts"
            exit 1
      
      - run:
          name: Download Usage Data CSV
          command: |
            source $BASH_ENV
            
            mkdir -p usage-data
            
            # Download the CSV file
            curl -L "$DOWNLOAD_URL" -o "usage-data/usage-data-${START_DATE}_to_${END_DATE}.csv"
            
            echo "Downloaded CSV file"
            ls -lh usage-data/
      
      - store_artifacts:
          path: usage-data
          destination: usage-reports
      
      - run:
          name: Display Summary
          command: |
            source $BASH_ENV
            
            CSV_FILE="usage-data/usage-data-${START_DATE}_to_${END_DATE}.csv"
            
            echo "========================================="
            echo "Usage Data Export Summary"
            echo "========================================="
            echo "Period: ${START_DATE} to ${END_DATE}"
            echo "File: $CSV_FILE"
            echo "File size: $(du -h "$CSV_FILE" | cut -f1)"
            echo "Number of records: $(wc -l < "$CSV_FILE")"
            echo "========================================="

workflows:
  monthly-usage-report:
    jobs:
      - fetch-usage-data:
          context: circleci-usage-api  # Create a context with CIRCLE_TOKEN
          filters:
            branches:
              only: main
    
    # Optional: Schedule to run on the first day of each month
    # triggers:
    #   - schedule:
    #       cron: "0 6 1 * *"  # Run at 6 AM on the 1st of every month
    #       filters:
    #         branches:
    #           only: main
